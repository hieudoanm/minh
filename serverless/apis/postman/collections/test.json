{
  "info": {
    "_postman_id": "5d0fcc0b-a124-4bdb-90a8-3f12a0a2eabe",
    "name": "@chatbot/functions",
    "description": "Functions\n\nContact Support:\n Name: hieudoanm \n Email: hieumdoan@gmail.com",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "21993101"
  },
  "item": [
    {
      "name": "api",
      "item": [
        {
          "name": "crypto/coins",
          "item": [
            {
              "name": "Get Crypto Coins",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"should return status 200\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/crypto/coins?offset=0&limit=100&orderBy=marketCap&orderDirection=desc&timePeriod=24h&tier=1",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "crypto", "coins"],
                  "query": [
                    {
                      "key": "offset",
                      "value": "0"
                    },
                    {
                      "key": "limit",
                      "value": "100"
                    },
                    {
                      "key": "orderBy",
                      "value": "marketCap"
                    },
                    {
                      "key": "orderDirection",
                      "value": "desc"
                    },
                    {
                      "key": "timePeriod",
                      "value": "24h"
                    },
                    {
                      "key": "tier",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "List of Crypto Coins",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/crypto/coins?offset=0&limit=100&orderBy=<string>&orderDirection=<string>&timePeriod=<string>&tier=<number>&tag=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "crypto", "coins"],
                      "query": [
                        {
                          "key": "offset",
                          "value": "0"
                        },
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "orderBy",
                          "value": "<string>"
                        },
                        {
                          "key": "orderDirection",
                          "value": "<string>"
                        },
                        {
                          "key": "timePeriod",
                          "value": "<string>"
                        },
                        {
                          "key": "tier",
                          "value": "<number>"
                        },
                        {
                          "key": "tag",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": \"success\",\n  \"data\": {\n    \"stats\": {\n      \"total\": 21448,\n      \"totalCoins\": 21448,\n      \"totalMarkets\": 30193,\n      \"totalExchanges\": 163,\n      \"totalMarketCap\": \"1047272654006\",\n      \"total24hVolume\": \"62896395294\"\n    },\n    \"coins\": [\n      {\n        \"uuid\": \"Qwsogvtv82FCd\",\n        \"symbol\": \"BTC\",\n        \"name\": \"Bitcoin\",\n        \"color\": \"#f7931A\",\n        \"iconUrl\": \"https://cdn.coinranking.com/bOabBYkcX/bitcoin_btc.svg\",\n        \"marketCap\": \"394614580885\",\n        \"price\": \"20557.232580148946\",\n        \"listedAt\": 1330214400,\n        \"tier\": 1,\n        \"change\": \"0.33\",\n        \"rank\": 1,\n        \"sparkline\": [\n          \"20519.28327355186\",\n          \"20506.46916708327\",\n          \"20459.848641306377\",\n          \"20503.75509648463\",\n          \"20589.52781292203\",\n          \"20596.035411180434\",\n          \"20584.813278603695\",\n          \"20566.850298373334\",\n          \"20628.075957837664\",\n          \"20586.160650720823\",\n          \"20573.748111911696\",\n          \"20502.195461514068\",\n          \"20451.091930369013\",\n          \"20439.442896950884\",\n          \"20469.430026175873\",\n          \"20446.27052466074\",\n          \"20417.397432534875\",\n          \"20456.95827045399\",\n          \"20455.466716769388\",\n          \"20481.07804586518\",\n          \"20465.824534122017\",\n          \"20469.92012352856\",\n          \"20463.35504333631\",\n          \"20490.255335347785\",\n          \"20532.29487550965\"\n        ],\n        \"lowVolume\": false,\n        \"coinrankingUrl\": \"https://coinranking.com/coin/Qwsogvtv82FCd+bitcoin-btc\",\n        \"24hVolume\": \"25805689838\",\n        \"btcPrice\": \"1\"\n      }\n    ]\n  }\n}"
                }
              ]
            },
            {
              "name": "Get Crypto Coin",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"should return status 200\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/crypto/coins/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "crypto", "coins", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "Qwsogvtv82FCd",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Get Crypto Coin",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/crypto/coins/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "crypto", "coins", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"data\": {\n    \"coin\": {\n      \"tags\": [\n        \"laborum\",\n        \"do ut ex dolor\"\n      ],\n      \"listedAt\": -38641778.48476111,\n      \"lowVolume\": true,\n      \"tier\": -59432885.89159645,\n      \"coinrankingUrl\": \"Lorem velit adipisicing\",\n      \"allTimeHigh\": {\n        \"timestamp\": -33687228.85391815,\n        \"price\": \"eiusmod deserunt fugiat in\"\n      },\n      \"sparkline\": [\n        \"ut eu\",\n        \"laboris tempor ad\"\n      ],\n      \"rank\": 22201959.96599354,\n      \"change\": \"fugiat incididunt do\",\n      \"priceAt\": 28487018.209001794,\n      \"btcPrice\": \"ea in\",\n      \"price\": \"nostrud occaecat\",\n      \"fullyDilutedMarketCap\": \"qui nulla\",\n      \"marketCap\": \"cillum laboris fugiat est\",\n      \"24hVolume\": \"voluptate pariatur dolor\",\n      \"numberOfExchanges\": 6880828.545409173,\n      \"numberOfMarkets\": 57176852.53493863,\n      \"supply\": {\n        \"circulating\": \"do fugiat id tempor\",\n        \"total\": \"qui nulla\",\n        \"max\": \"incididunt Ut culpa dolor\",\n        \"supplyAt\": -9438071.083356813,\n        \"confirmed\": true\n      },\n      \"links\": [\n        {\n          \"url\": \"laborum e\",\n          \"type\": \"minim Lorem proident\",\n          \"name\": \"ad eiusmod est\"\n        },\n        {\n          \"url\": \"mollit tempor reprehenderit\",\n          \"type\": \"esse sint amet ea\",\n          \"name\": \"fugiat cupidatat\"\n        }\n      ],\n      \"websiteUrl\": \"laboris dolor\",\n      \"iconUrl\": \"aliquip Ut\",\n      \"color\": \"tempor aliquip Lorem proident anim\",\n      \"description\": \"esse consequat minim pariatur sunt\",\n      \"name\": \"ex irure consequat laboris\",\n      \"symbol\": \"Ut nulla do\",\n      \"uuid\": \"e\"\n    }\n  },\n  \"status\": \"dolore incididunt eiusmod Ut ut\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "status",
          "item": [
            {
              "name": "Get Service Statuses",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"should return status 200\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/status",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "status"]
                }
              },
              "response": [
                {
                  "name": "Status of All Services",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/status",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "status"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"atlassian\": {\n    \"status\": \"active\",\n    \"service\": \"dolor sit\"\n  },\n  \"bitbucket\": {\n    \"status\": \"inactive\",\n    \"service\": \"pariatur consequat in laborum\"\n  },\n  \"circleci\": {\n    \"status\": \"inactive\",\n    \"service\": \"pariatur magna in aute amet\"\n  },\n  \"confluence\": {\n    \"status\": \"active\",\n    \"service\": \"cupidatat nisi\"\n  },\n  \"discord\": {\n    \"status\": \"active\",\n    \"service\": \"in sed dolore ut\"\n  },\n  \"github\": {\n    \"status\": \"inactive\",\n    \"service\": \"dolore elit\"\n  },\n  \"hedera\": {\n    \"status\": \"active\",\n    \"service\": \"proident do in anim\"\n  },\n  \"jira-software\": {\n    \"status\": \"active\",\n    \"service\": \"veniam\"\n  },\n  \"solana\": {\n    \"status\": \"active\",\n    \"service\": \"esse exercitation deserunt\"\n  },\n  \"trello\": {\n    \"status\": \"active\",\n    \"service\": \"nulla adipisicing eu ut nisi\"\n  },\n  \"vercel\": {\n    \"status\": \"inactive\",\n    \"service\": \"sed Duis aute\"\n  }\n}"
                }
              ]
            },
            {
              "name": "Get Service Status",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"should return status 200\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/status/:service",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "status", ":service"],
                  "variable": [
                    {
                      "key": "service",
                      "value": "bitbucket",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Status of the Service",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/status/:service",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "status", ":service"],
                      "variable": [
                        {
                          "key": "service",
                          "value": "<string>",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": \"inactive\",\n  \"name\": \"consequat qui nisi ad incididunt\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "vnindex",
          "item": [
            {
              "name": "history/{stock Code}",
              "item": [
                {
                  "name": "Get History",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"should return status 200\", () => {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/vnindex/history/:stockCode?offset=0&limit=20",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "vnindex", "history", ":stockCode"],
                      "query": [
                        {
                          "key": "offset",
                          "value": "0"
                        },
                        {
                          "key": "limit",
                          "value": "20"
                        }
                      ],
                      "variable": [
                        {
                          "key": "stockCode",
                          "value": "VPB",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "History of Stock",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/vnindex/history/:stockCode?offset=0&limit=20",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "vnindex", "history", ":stockCode"],
                          "query": [
                            {
                              "key": "offset",
                              "value": "0"
                            },
                            {
                              "key": "limit",
                              "value": "20"
                            }
                          ],
                          "variable": [
                            {
                              "key": "stockCode",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n  {\n    \"timestamp\": \"officia esse Duis id\",\n    \"volume\": \"vel\",\n    \"close\": \"in mollit in exercita\",\n    \"low\": \"commodo velit\",\n    \"high\": \"magna dolor\",\n    \"open\": \"sunt aliquip laborum\",\n    \"symbol\": \"dolore do nostrud ullamco\",\n    \"date\": \"magna id dolor dolor\"\n  },\n  {\n    \"timestamp\": \"sint ex nisi do\",\n    \"volume\": \"reprehenderit sit id\",\n    \"close\": \"voluptate Excepteur irure\",\n    \"low\": \"ipsum Duis occaecat\",\n    \"high\": \"est Ut cupidatat\",\n    \"open\": \"deserunt dolor sint ipsum qui\",\n    \"symbol\": \"labore in ipsum\",\n    \"date\": \"laboris ad enim aliqua\"\n  }\n]"
                    }
                  ]
                },
                {
                  "name": "Chartify History",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"should return status 200\", () => {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/vnindex/history/:stockCode/chart?width=500&height=100&minValue=0&maxValue=200&strokeColor=%230074d9&strokeWidth=2",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "api",
                        "vnindex",
                        "history",
                        ":stockCode",
                        "chart"
                      ],
                      "query": [
                        {
                          "key": "width",
                          "value": "500"
                        },
                        {
                          "key": "height",
                          "value": "100"
                        },
                        {
                          "key": "minValue",
                          "value": "0"
                        },
                        {
                          "key": "maxValue",
                          "value": "200"
                        },
                        {
                          "key": "strokeColor",
                          "value": "%230074d9"
                        },
                        {
                          "key": "strokeWidth",
                          "value": "2"
                        }
                      ],
                      "variable": [
                        {
                          "key": "stockCode",
                          "value": "VPB",
                          "description": "(Required) "
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "Chart SVG",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/vnindex/history/:stockCode/chart?width=500&height=100&minValue=0&maxValue=200&strokeColor=%230074d9&strokeWidth=2",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "api",
                            "vnindex",
                            "history",
                            ":stockCode",
                            "chart"
                          ],
                          "query": [
                            {
                              "key": "width",
                              "value": "500"
                            },
                            {
                              "key": "height",
                              "value": "100"
                            },
                            {
                              "key": "minValue",
                              "value": "0"
                            },
                            {
                              "key": "maxValue",
                              "value": "200"
                            },
                            {
                              "key": "strokeColor",
                              "value": "#0074d9"
                            },
                            {
                              "key": "strokeWidth",
                              "value": "2"
                            }
                          ],
                          "variable": [
                            {
                              "key": "stockCode",
                              "value": "<string>",
                              "description": "(Required) "
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "null"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Get Companies",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"should return status 200\", () => {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/vnindex/companies",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "vnindex", "companies"]
                }
              },
              "response": [
                {
                  "name": "List of Publicly Listed Companies",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/vnindex/companies",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "vnindex", "companies"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n  {\n    \"priceChangedThreeMonthsPercent\": \"reprehenderit\",\n    \"priceChangedOneMonthPercent\": \"reprehenderit deserunt voluptate\",\n    \"priceChangedFiveDayPercent\": \"cu\",\n    \"marketCap\": \"esse sint et amet\",\n    \"issueShare\": \"id\",\n    \"listedDate\": \"ea ad Duis culpa sed\",\n    \"subsector\": \"sit tempor Duis\",\n    \"sector\": \"Lorem nostrud\",\n    \"supersector\": \"elit mollit sint\",\n    \"industry\": \"velit voluptate proident\",\n    \"name\": \"in esse veniam Ut\",\n    \"market\": \"Lorem commodo laborum exercitation adipisicing\",\n    \"symbol\": \"non eiusmod\"\n  },\n  {\n    \"priceChangedThreeMonthsPercent\": \"commodo\",\n    \"priceChangedOneMonthPercent\": \"magna reprehenderit veniam eiusmod aute\",\n    \"priceChangedFiveDayPercent\": \"Ut ex cillum\",\n    \"marketCap\": \"Duis sed\",\n    \"issueShare\": \"nisi consequat\",\n    \"listedDate\": \"veniam Excepteur proident ad\",\n    \"subsector\": \"pariatur ad\",\n    \"sector\": \"Duis dolor eu veniam Excepteur\",\n    \"supersector\": \"laboris\",\n    \"industry\": \"nostrud in Lorem \",\n    \"name\": \"minim aliqua eiusmod qui\",\n    \"market\": \"velit do sint\",\n    \"symbol\": \"ut sit Lorem\"\n  }\n]"
                }
              ]
            }
          ]
        },
        {
          "name": "Get Forex Rates",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"should return status 200\", () => {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/forex/rates",
              "host": ["{{baseUrl}}"],
              "path": ["api", "forex", "rates"]
            }
          },
          "response": [
            {
              "name": "List of Forex Rates",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/forex/rates?category=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "forex", "rates"],
                  "query": [
                    {
                      "key": "category",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"rates\": {},\n  \"date\": \"non consequat n\",\n  \"base\": \"eiusmod voluptate Lorem\",\n  \"timestamp\": -51469551.58627588,\n  \"success\": false\n}"
            }
          ]
        },
        {
          "name": "Get Health",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"should return status 200\", () => {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{baseUrl}}/api/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "health"]
            }
          },
          "response": [
            {
              "name": "Get Health of Service",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/health",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "health"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"healthy\"\n}"
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "/",
      "type": "string"
    }
  ]
}
